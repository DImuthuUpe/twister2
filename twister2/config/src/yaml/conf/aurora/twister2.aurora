# these two are set from command line when starting AuroraProcess
# the path of the twister2 package to be uploaded to Mesos container
pth = '{{TWISTER2_PACKAGE_PATH}}'
# filename of the twister2 package to be uploaded to Mesos container
# fn='twister2-client.tar.gz'
fn='{{TWISTER2_PACKAGE_FILE}}'

# one Java job submission to Aurora Scheduler
# two processes: one is for file copy and the other is to run java code in the container

# a process to copy project package file to the sandbox
copy_java = Process(
  name = 'fetch2',
  cmdline = 'cp %s%s . && chmod +x %s && tar zxf %s && echo %s%s copied' % (pth, fn, fn, fn, pth, fn))

# java command to run the worker in sandboxes
javacmd = 'java -cp ' \
  'twister2-dist/lib/libresource-scheduler-java.jar:' \
  'twister2-dist/lib/libconfig-java.jar:' \
  'twister2-dist/lib/snakeyaml-1.15.jar:' \
  ' edu.iu.dsc.tws.rsched.schedulers.aurora.WorkerHello'

run_java = Process(
  name = 'testjava',
  cmdline = javacmd)

# describe the task
java_task = SequentialTask(
  processes = [copy_java, run_java],
  resources = Resources(cpu = '{{CPUS_PER_CONTAINER}}', ram = '{{RAM_PER_CONTAINER}}', disk = '{{DISK_PER_CONTAINER}}')
)

java_job = Job(
  cluster = '{{CLUSTER}}',
  environment = '{{ENVIRONMENT}}',
  role = '{{ROLE}}',
  name = '{{AURORA_JOB_NAME}}',
  task = java_task,
  instances = '{{NUMBER_OF_CONTAINERS}}'
)

jobs = [java_job]
