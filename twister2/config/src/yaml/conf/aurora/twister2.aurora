# path of the twister core packge
pth = '/root/twister2/'
# filename of the twister2 package
fn='twister2-client.tar.gz'

# one Java job submission
# two processes: one file copy and the other to run java code 

# a process to copy project package file to the sandbox
copy_java = Process(
  name = 'fetch2',
  cmdline = 'cp %s%s . && chmod +x %s && tar zxf %s && echo %s%s copied' % (pth, fn, fn, fn, pth, fn))

# java command to run the worker in sandboxes
javacmd = 'java -cp ' \
  'twister2-dist/lib/libresource-scheduler-java.jar:' \
  'twister2-dist/lib/libconfig-java.jar:' \
  'twister2-dist/lib/snakeyaml-1.15.jar:' \
  ' edu.iu.dsc.tws.rsched.schedulers.aurora.WorkerTest'

run_java = Process(
  name = 'testjava',
  cmdline = javacmd)

# describe the task
java_task = SequentialTask(
  processes = [copy_java, run_java],
#  resources = Resources(cpu = '{{CPUS_PER_CONTAINER}}', ram = 1*GB, disk = 1*GB)
  resources = Resources(cpu = '{{CPUS_PER_CONTAINER}}', ram = '{{RAM_PER_CONTAINER}}', disk = '{{DISK_PER_CONTAINER}}')
)

java_job = Job(
  cluster = '{{CLUSTER}}',
  environment = '{{ENVIRONMENT}}',
  role = '{{ROLE}}',
  name = '{{JOB_NAME}}',
  task = java_task,
  instances = '{{NUMBER_OF_CONTAINERS}}'
)

jobs = [java_job]
